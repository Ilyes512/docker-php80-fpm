version: "2"

silent: false

########################################################################################################################
#
# TOC
#
########################################################################################################################
#
# 1. BUILD
#
########################################################################################################################

tasks:
  ######################################################################################################################
  #
  #  1. BUILD
  #
  ######################################################################################################################

  d:build:debian:
    desc: Build a PHP Debian-based Docker image
    cmds:
      - task: d:build
        vars:
          OS: debian
          TARGET: builder
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'
      - task: d:build
        vars:
          OS: debian
          TARGET: runtime
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:build:alpine:
    desc: Build a PHP Alpine-based Docker image
    cmds:
      - task: d:build
        vars:
          OS: alpine
          TARGET: builder
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'
      - task: d:build
        vars:
          OS: alpine
          TARGET: runtime
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:build:
    # deps:
    #   - task: d:lint
    #     vars:
    #       OS: '{{.OS}}'
    preconditions:
      - sh: test '{{.OS}}' != '<no value>'
        msg: OS needs to contain the Docker OS [alpine, debian]
      - sh: test '{{.TARGET}}' != '<no value>'
        msg: TARGET needs to contain the Docker TARGET [runtime, builder]
      - sh: test '{{.TAG_VERSION}}' != '<no value>'
        msg: TAG_VERSION needs to contain the tag that will be assigned to the Docker build
    cmds:
      - docker build
        --build-arg VCS_REF=$(git rev-parse HEAD)
        --build-arg CREATED=$(date --iso-8601=seconds)
        --file {{.OS}}/Dockerfile
        --target {{.TARGET}}
        --tag {{.TAG_REPOSITORY}}/{{.TAG_NAME}}:{{.OS}}-{{.TAG_VERSION}}-{{.TARGET}}
        .

  d:lint:
    desc: Apply a Dockerfile linter (https://github.com/hadolint/hadolint)
    preconditions:
      - sh: test '{{.OS}}' != '<no value>'
        msg: OS needs to contain the Docker OS [alpine, debian]
    cmds:
      - docker run
        --interactive
        --rm
        hadolint/hadolint:{{.HADOLINT_TAG_VERSION}}
        hadolint
        --ignore DL3018
        --ignore DL3008
        -
        < ./{{.OS}}/Dockerfile
